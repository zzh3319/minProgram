<style lang="less">
.userinfo {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.userinfo-avatar {
    width: 80rpx;
    height: 80rpx;
    border-radius: 50%;
}

.userinfo-nickname {
    color: #aaa;
}
</style>
<template>
  <view class="container">
    <map id="map" longitude="113.324520" latitude="23.099994" scale="14" controls="{{controls}}" bindcontroltap="controltap" markers="{{markers}}" bindmarkertap="markertap" polyline="{{polyline}}" bindregionchange="regionchange" show-location style="width: 100%; height: 300px;"></map>
    <wxc-loading wx:if="{{isShow}}" class="wxc-loading0" type="mall"></wxc-loading>
    <button class='getUserInfoBtn' open-type='getUserInfo' bindgetuserinfo='userInfoHandler'>点击授权</button>
    <view class="userinfo" @tap="handleViewTap">
      <image class="userinfo-avatar" src="{{ userInfo.avatarUrl }}" background-size="cover"/>
      <view class="userinfo-nickname">{{ userInfo.nickName }}</view>
      <wxInput placeholder="输入值" :tValue.sync="inText" maxlength="20" />
      <view>
        <input placeholder="这里输入" value="{{tobj.myText}}" type="text" maxlength="10" @change="changeText"></input>
      </view>
    </view>
    <panel>
      <view class="title" slot="title">测试数据绑定2</view>
      <text class="info">{{normalTitle}}</text>
      <text class="info">{{setTimeoutTitle}}</text>
      <text class="info">{{mixin}}</text>
      <text class="info">{{mynum}}</text>
      <text class="info">{{now}}</text>
      <button @tap="plus('a')" size="mini">  +  </button>
    </panel>

    <panel>
      <view class="title" slot="title">其它测试</view>
      <button @tap="toast" size="mini">第三方组件</button>
      <button @tap="communicate" size="mini">组件通信</button>
      <button @tap="tap" size="mini">混合TAP事件</button>
    </panel>

    <panel>
      <view class="title" slot="title">测试并发网络请求</view>
      <view>返回结果: <text>{{netrst}}</text></view>
      <button @tap="request" size="mini"> 点我发起10个请求 </button>
    </panel>

    <panel>
      <view class="title" slot="title">测试组件</view>

      <text class="testcounter">计数组件1: </text>
      <view class="counterview">
        <counter1 @index-emit.user="counterEmit" />
      </view>

      <text class="testcounter">计数组件2: </text>

      <view class="counterview">
        <counter2 :num.sync="mynum"></counter2>
      </view>
    </panel>

    <panel>
      <view class="title" slot="title">测试组件Repeat</view>
      <repeat for="{{groupList}}" index="index" item="item" key="key">
        <group :grouplist="item" :indexa="index"></group>
      </repeat>
    </panel>

    <panel>
      <view class="title" slot="title">测试列表</view>
      <list></list>
    </panel>

    <toast />
  </view>
</template>

<script>
import wepy from 'wepy';
import List from '@/components/list';
import Panel from '@/components/panel'; // alias example
import Counter from 'counter'; // alias example
import Group from '@/components/group';
import Toast from 'wepy-com-toast';
import wxInput from '@/components/wxInput';
import testMixin from '@/mixins/test';

export default class demo extends wepy.page {
    config = {
        navigationBarTitleText: 'demo',
        usingComponents: {
            'wxc-loading': '../../../packages/@minui/wxc-loading/dist/index'
        }
    };
    components = {
        panel: Panel,
        counter1: Counter,
        counter2: Counter,
        list: List,
        group: Group,
        toast: Toast,
        wxInput
    };

    mixins = [testMixin];

    data = {
        markers: [
            {
                iconPath: '/static/img/i_shop.png',
                id: 0,
                latitude: 23.099994,
                longitude: 113.32452,
                width: 32,
                height: 41
            }
        ],
        polyline: [
            {
                points: [
                    {
                        longitude: 113.3245211,
                        latitude: 23.10229
                    },
                    {
                        longitude: 113.32452,
                        latitude: 23.21229
                    }
                ],
                color: '#FF0000DD',
                width: 2,
                dottedLine: true
            }
        ],
        controls: [
            {
                id: 1,
                iconPath: '/static/img/i_now.png',
                position: {
                    left: 0,
                    top: 300 - 50,
                    width: 28,
                    height: 28
                },
                clickable: true
            }
        ],
        inText: 0,
        tobj: {
            myText: 0
        },
        mynum: 20,
        userInfo: {
            nickName: '加载中...'
        },
        isShow: true,
        normalTitle: '原始标题',
        setTimeoutTitle: '标题三秒后会被修改',
        count: 0,
        netrst: '',
        groupList: [
            {
                id: 1,
                name: '点击改变',
                list: [
                    {
                        childid: '1.1',
                        childname: '子项，点我改变'
                    },
                    {
                        childid: '1.2',
                        childname: '子项，点我改变'
                    },
                    {
                        childid: '1.3',
                        childname: '子项，点我改变'
                    }
                ]
            },
            {
                id: 2,
                name: '点击改变',
                list: [
                    {
                        childid: '2.1',
                        childname: '子项，点我改变'
                    },
                    {
                        childid: '2.2',
                        childname: '子项，点我改变'
                    },
                    {
                        childid: '2.3',
                        childname: '子项，点我改变'
                    }
                ]
            },
            {
                id: 3,
                name: '点击改变',
                list: [
                    {
                        childid: '3.1',
                        childname: '子项，点我改变'
                    }
                ]
            }
        ]
    };

    computed = {
        now() {
            return +new Date();
        }
    };

    methods = {
        changeText(e) {
            console.log('sss');
            console.log(e);
            this.tobj.myText = e.detail.value;
            if (this.tobj.myText > 5) {
                this.tobj.myText = +new Date();
            }
        },
        plus() {
            this.mynum++;
        },
        toast() {
            let promise = this.$invoke('toast', 'show', {
                title: '自定义标题',
                img:
                    'https://raw.githubusercontent.com/kiinlam/wetoast/master/images/star.png'
            });

            promise.then(d => {
                console.log('toast done');
            });
        },
        tap() {
            console.log('do noting from ' + this.$name);
        },
        communicate() {
            console.log(this.$name + ' tap');

            this.$invoke('counter2', 'minus', 45, 6);
            this.$invoke('counter1', 'plus', 45, 6);

            this.$broadcast('index-broadcast', 1, 3, 4);
        },
        request() {
            let self = this;
            let i = 10;
            let map = [
                'MA==',
                'MQo=',
                'Mg==',
                'Mw==',
                'NA==',
                'NQ==',
                'Ng==',
                'Nw==',
                'OA==',
                'OQ=='
            ];
            while (i--) {
                wepy
                    .request({
                        url:
                            'https://www.madcoder.cn/tests/sleep.php?time=1&t=css&c=' +
                            map[i] +
                            '&i=' +
                            i
                    })
                    .then(d => {
                        self.netrst += d.data + '.';
                        self.$apply();
                    });
            }
        },
        counterEmit(...args) {
            let $event = args[args.length - 1];
            console.log(
                `${this.$name} receive ${$event.name} from ${
                    $event.source.$name
                }`
            );
        }
    };

    async userInfoHandler(res) {
        console.log(res);
        try {
            let st = await wepy.getSetting();
            if (!st.authSetting['scope.address']) {
                // let auth = await wepy.authorize({
                //     scope: 'scope.address'
                // });
                let address = await wepy.chooseAddress();
                console.log(address);
            } else {
                let address = await wepy.chooseAddress();
                console.log(address);
            }
        } catch (error) {
            console.log(error);
            wepy.openSetting(); //let st = wepy.openSetting();
        }
    }

    events = {
        'input-change': val => {
            console.log(val);
            if (val > 5) {
                this.inText = +new Date();
                this.$apply();
            }
        },
        //用于监听组件之间的通信与交互事件的事件处理函数需要写在组件和页面的events对象
        'index-emit': (...args) => {
            let $event = args[args.length - 1];
            console.log(
                `${this.$name} receive ${$event.name} from ${
                    $event.source.$name
                }`
            );
        }
        //在子组件中的调用方式：
        //  plus() {
        //   this.num = this.num + 1
        //   console.log(this.$name + ' plus tap')
        //   this.$emit('index-emit', 1, 2, 3)
        // },
    };

    onLoad() {
        let self = this;
        setTimeout(() => {
            self.inText = 200;
            self.$apply();
        }, 3000);
        let loadingComponent = this.$wxpage.selectComponent('.wxc-loading' + 0);
        loadingComponent && loadingComponent.show();

        setTimeout(() => {
            // loadingComponent.hide();
            self.isShow = false;
            self.$apply();

            // this.$parent.navigateTo({
            //   url: 'about'
            // });
        }, 50);

        this.$parent.getUserInfo(function(userInfo) {
            if (userInfo) {
                self.userInfo = userInfo;
            }
            self.normalTitle = '标题已被修改';

            self.setTimeoutTitle = '标题三秒后会被修改';
            setTimeout(() => {
                self.setTimeoutTitle = '到三秒了';
                self.$apply();
            }, 30);

            self.$apply();
        });
    }

    regionchange(e) {
        console.log(`type: ${e.type}`);
    }
    markertap(e) {
        console.log(`markerId: ${e.markerId}`);
    }
    controltap(e) {
        console.log(`控制器ID： ${e.controlId}`);
    }
}
</script>
